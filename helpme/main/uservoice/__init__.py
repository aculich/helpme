'''

Copyright (C) 2017-2018 Vanessa Sochat.

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

'''

from helpme.main import HelperBase
from helpme.action import ( record_asciinema, upload_asciinema )
from helpme.logger import ( bot )
import os
import sys

class Helper(HelperBase):

    def __init__(self, **kwargs):
 
        self.name = "uservoice"
        super(Helper, self).__init__(**kwargs)

    def load_secrets(self):

        required_vars = ['subdomain', 'api_key', 'api_secret']
        for required in required_vars:
            envar = "HELPME_USERVOICE_%s" %required.upper()
            setting = self._get_and_update_setting(envar)
            print(setting)
            if not setting:
                bot.error('export %s in environment.' %envar)
                sys.exit(1)
            setattr(self, required, setting)
        

    def _submit(self):
        '''submit the issue to github. When we get here we should have:
           
           {'user_prompt_issue': 'I want to do the thing.', 
            'record_asciinema': '/tmp/helpme.93o__nt5.json',
            'record_environment': ((1,1),(2,2)...(N,N))}

           self.token should be propogated with the personal access token
        '''
 
        title = "HelpMe UserVoice Ticket: %s" %(self.run_id)
        body = self.data['user_prompt_issue']

        # Step 1: Environment

        envars = self.data.get('record_environment')
        if envars not in [None, '', []]:
            body += '\n## Environment\n'
            for envar in envars:
                body += ' - **%s**: %s\n' %(envar[0], envar[1])

        # Step 2: Asciinema

        asciinema = self.data.get('record_asciinema')
        if asciinema not in [None, '']:
            url = upload_asciinema(asciinema)
               
            # If the upload is successful, add a link to it.

            if url is not None:
                body += "\n[View Asciinema Recording](%s)" %url
 
        # Add other metadata about client

        body += "\ngenerated by [HelpMe](https://vsoch.github.io/helpme/)"

        # Submit the issue TODO:

